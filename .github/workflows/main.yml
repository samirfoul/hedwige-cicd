# Nom du workflow qui apparaîtra dans l'onglet "Actions" de GitHub
name: CI/CD Pipeline for Hedwige-Express

# Déclencheur : ce workflow s'exécutera à chaque push sur la branche 'main'
on:
  push:
    branches: [ "main" ]

# Les tâches à exécuter
jobs:
  build-and-test:
    # Le type de machine sur laquelle exécuter le job
    runs-on: ubuntu-latest

    # Les étapes du job
    steps:
      # 1. Récupère le code de votre dépôt
      - name: Checkout code
        uses: actions/checkout@v3

      # 2. Configure l'environnement Python
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      # 3. Installe les dépendances (y compris les outils de test et de linting)
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install flake8 # Outil pour vérifier la norme PEP8

      # 4. Vérification de la norme de code (PEP8)
      # --count --select=E9,F63,F7,F82 --show-source --statistics : options pour flake8
      - name: Lint with flake8 (PEP8)
        run: |
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

      # 5. Lancement des tests unitaires
      - name: Run Unit Tests
        run: python -m pytest

      # 6. Connexion à Docker Hub en utilisant les secrets
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # 7. Construction et push de l'image Docker
      # Le tag "latest" signifie que c'est la version la plus récente.
      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/hedwige-express:latest

